// HelloWorld.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

// 소스파일 (확장자 .c or .cpp같은 것)
// 주석(comment)  : 컴파일러가 무시하는 문장=프로그램에서 실행이 되지 않는 부분
// shift 화살표 : 블럭잡기
/*
alt+shift+화살표 : 세로 블럭잡기
* ctrl+d : 한 줄 복제하기
ctrl+space : 자동완성기능(인텔리센스)창 띄우기
주석
주석
주석
shift+del : 한 줄 삭제하기
shift + 화살표 : 블럭 잡기
이거 맨끝에 꺼 그 사이 주석으로 만들기 ㅇㅇ
alt+화살표 위 아래 : 줄 바꾸기 
ctrl+화살표 단어 단위
*/


// 레전드
/*컴파일러: 번역기(사람이 쓴 코드 기계가 알아듣게 번역
execute file = exe
컴파일러 마다 번역 다름(당연..?)
-목적코드 생성
- 링커가 연결해서 실행파일 생성

프로그램 디버그 : <f5> 키 또는 [디버그] > [디버깅 시작] 메뉴
ctrl(alt)+B+B : 프로젝트(솔루션) 빌드
*/

/*
빌드 : 실행파일 생성하기
리빌드 : 전체 다시 빌드(제대로 했는데 실행 X 시 CHECK) 정리+ 빌드 ALT+B+R 프로젝트 리빌드
남한테 .PDB 파일 X (디버깅 가능 정보 ) 프로그램 구조 포함
*/

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
#define _CRT_SECURE_NO_WARNINGS
#include <iostream> //INPUT, OUTPUT STREAM
#include <stdio.h>//C 언어에서 쓰는 전통적인 방식.?
#include <cstdio> //C++표준 그리고 함수들이 std 네임스페이스 안에 들어갑니다. ? 
//#include "header.h" // header불러오는 것 (깔끔하게 쓰기 위해서)

//#define_CRT_SECURE_NO_WARNINGS

int main() //엔트리 포인트 (코드가 시작되는 곳) // {열은거 있으면 닫아야함}
{
    
    
    printf("hello\tworld!\n" );//c언어의 출력방법
    printf( "HJ\t\"\t" );//c언어의 출력방법 ""안에 \n이 있으면 줄을 바꾸라는 의미 (이스케이프 스퀀스)
    printf("97년생입니다.\n"); 

    //이스케이프 스퀀스
    // \n : 줄바꾸기
    // \t : 탭 넣기
    // \" : 쌍따옴표 한개
    // \\ : \찍기
    // \r : 캐리지 리턴(윈도우에서는 중요하지 않음 , 리눅스에서는 중요함) - 제일 앞으로 보내기
    
   
    printf("안녕하세요\n");
    printf("식사하셨나요\n");
    printf("이거 안쓰면 어떻게 되는 거\n");
    printf("나이가 몇 살이신가요?\n");

   
    int number = 0;  //변수
    scanf("%d", &number); //녹색밑줄 잘못 쓴 것은 아닌데 문제가 될 수 있는 것 //위험한 함수 메모리 침범 가능 (visual studio 에서 권장 x)


    printf("입력한 숫자는(C) : %d\n", number); //저장된 숫자가 대신 들어감 숫자를 하나 입력 받기(C)
    
    printf(" %d\n이군요", number);

    std::cin >> number;
    printf("입력한 숫자는(C++) : %d\n", number); //숫자를 하나 입력 받기 (C++)

    printf("%d이구나",number);
  

    //프로그램을 실행했을 때 나이를 물어보고 입력받은 숫자를 그대로 출력

//std: printf("hello my world!|n"); //C언어의 출력방법
    //std::cout << "Hello My World!\n"; //이것은 한 줄 출력하기 //C++출력 방법 //빨간 줄은 문법 오류 //언리얼에서 사용X printf 사용
    return 0;
}

//게임 입출력 중요

//int main()
//printf("뭐라적기");
//return 0; 끝내기 ㅇㅇ





